// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabase":       schema_pkg_apis_api_v1alpha1_ExternalDatabase(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseSpec":   schema_pkg_apis_api_v1alpha1_ExternalDatabaseSpec(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseStatus": schema_pkg_apis_api_v1alpha1_ExternalDatabaseStatus(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlDatabase":          schema_pkg_apis_api_v1alpha1_MySqlDatabase(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlDatabaseSpec":      schema_pkg_apis_api_v1alpha1_MySqlDatabaseSpec(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlDatabaseStatus":    schema_pkg_apis_api_v1alpha1_MySqlDatabaseStatus(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlUser":              schema_pkg_apis_api_v1alpha1_MySqlUser(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlUserSpec":          schema_pkg_apis_api_v1alpha1_MySqlUserSpec(ref),
		"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlUserStatus":        schema_pkg_apis_api_v1alpha1_MySqlUserStatus(ref),
	}
}

func schema_pkg_apis_api_v1alpha1_ExternalDatabase(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ExternalDatabase is the Schema for the externaldatabases API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseSpec", "github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_api_v1alpha1_ExternalDatabaseSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ExternalDatabaseSpec defines the desired state of ExternalDatabase",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"host": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"adminUser": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"adminPasswordRef": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/api/core/v1.SecretKeySelector"),
						},
					},
					"type": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"namespaceSelector": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector"),
						},
					},
				},
				Required: []string{"host", "adminUser", "adminPasswordRef", "type", "namespaceSelector"},
			},
		},
		Dependencies: []string{
			"k8s.io/api/core/v1.SecretKeySelector", "k8s.io/apimachinery/pkg/apis/meta/v1.LabelSelector"},
	}
}

func schema_pkg_apis_api_v1alpha1_ExternalDatabaseStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "ExternalDatabaseStatus defines the observed state of ExternalDatabase",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"reachable": {
						SchemaProps: spec.SchemaProps{
							Description: "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"operator-sdk generate k8s\" to regenerate code after modifying this file Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html",
							Type:        []string{"boolean"},
							Format:      "",
						},
					},
					"error": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"reachable", "error"},
			},
		},
	}
}

func schema_pkg_apis_api_v1alpha1_MySqlDatabase(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MySqlDatabase is the Schema for the mysqldatabases API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlDatabaseSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlDatabaseStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlDatabaseSpec", "github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlDatabaseStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_api_v1alpha1_MySqlDatabaseSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MySqlDatabaseSpec defines the desired state of MySqlDatabase",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"owner": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"externalDatabaseRef": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseRef"),
						},
					},
				},
				Required: []string{"name", "owner", "externalDatabaseRef"},
			},
		},
		Dependencies: []string{
			"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseRef"},
	}
}

func schema_pkg_apis_api_v1alpha1_MySqlDatabaseStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MySqlDatabaseStatus defines the observed state of MySqlDatabase",
				Type:        []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_api_v1alpha1_MySqlUser(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MySqlUser is the Schema for the mysqlusers API",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlUserSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlUserStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlUserSpec", "github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.MySqlUserStatus", "k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"},
	}
}

func schema_pkg_apis_api_v1alpha1_MySqlUserSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MySqlUserSpec defines the desired state of MySqlUser",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"name": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"host": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"externalDatabaseRef": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseRef"),
						},
					},
					"existingPasswordSecretRef": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/api/core/v1.SecretKeySelector"),
						},
					},
				},
				Required: []string{"name", "externalDatabaseRef", "existingPasswordSecretRef"},
			},
		},
		Dependencies: []string{
			"github.com/UnlawfulMonad/edb-operator/pkg/apis/api/v1alpha1.ExternalDatabaseRef", "k8s.io/api/core/v1.SecretKeySelector"},
	}
}

func schema_pkg_apis_api_v1alpha1_MySqlUserStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "MySqlUserStatus defines the observed state of MySqlUser",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"created": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"boolean"},
							Format: "",
						},
					},
					"error": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
				Required: []string{"created", "error"},
			},
		},
	}
}
