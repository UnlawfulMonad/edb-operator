// +build !ignore_autogenerated

// Code generated by operator-sdk. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabase) DeepCopyInto(out *ExternalDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabase.
func (in *ExternalDatabase) DeepCopy() *ExternalDatabase {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseList) DeepCopyInto(out *ExternalDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExternalDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseList.
func (in *ExternalDatabaseList) DeepCopy() *ExternalDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ExternalDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseRef) DeepCopyInto(out *ExternalDatabaseRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseRef.
func (in *ExternalDatabaseRef) DeepCopy() *ExternalDatabaseRef {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseSpec) DeepCopyInto(out *ExternalDatabaseSpec) {
	*out = *in
	in.AdminPasswordRef.DeepCopyInto(&out.AdminPasswordRef)
	if in.NamespaceSelector != nil {
		in, out := &in.NamespaceSelector, &out.NamespaceSelector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseSpec.
func (in *ExternalDatabaseSpec) DeepCopy() *ExternalDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExternalDatabaseStatus) DeepCopyInto(out *ExternalDatabaseStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExternalDatabaseStatus.
func (in *ExternalDatabaseStatus) DeepCopy() *ExternalDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ExternalDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlDatabase) DeepCopyInto(out *MySqlDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlDatabase.
func (in *MySqlDatabase) DeepCopy() *MySqlDatabase {
	if in == nil {
		return nil
	}
	out := new(MySqlDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySqlDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlDatabaseList) DeepCopyInto(out *MySqlDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySqlDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlDatabaseList.
func (in *MySqlDatabaseList) DeepCopy() *MySqlDatabaseList {
	if in == nil {
		return nil
	}
	out := new(MySqlDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySqlDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlDatabaseSpec) DeepCopyInto(out *MySqlDatabaseSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
	out.ExternalDatabaseRef = in.ExternalDatabaseRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlDatabaseSpec.
func (in *MySqlDatabaseSpec) DeepCopy() *MySqlDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(MySqlDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlDatabaseStatus) DeepCopyInto(out *MySqlDatabaseStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlDatabaseStatus.
func (in *MySqlDatabaseStatus) DeepCopy() *MySqlDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(MySqlDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlUser) DeepCopyInto(out *MySqlUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlUser.
func (in *MySqlUser) DeepCopy() *MySqlUser {
	if in == nil {
		return nil
	}
	out := new(MySqlUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySqlUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlUserList) DeepCopyInto(out *MySqlUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MySqlUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlUserList.
func (in *MySqlUserList) DeepCopy() *MySqlUserList {
	if in == nil {
		return nil
	}
	out := new(MySqlUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MySqlUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlUserSpec) DeepCopyInto(out *MySqlUserSpec) {
	*out = *in
	if in.ExternalDatabaseRef != nil {
		in, out := &in.ExternalDatabaseRef, &out.ExternalDatabaseRef
		*out = new(ExternalDatabaseRef)
		**out = **in
	}
	if in.ExistingPasswordSecretRef != nil {
		in, out := &in.ExistingPasswordSecretRef, &out.ExistingPasswordSecretRef
		*out = new(corev1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlUserSpec.
func (in *MySqlUserSpec) DeepCopy() *MySqlUserSpec {
	if in == nil {
		return nil
	}
	out := new(MySqlUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MySqlUserStatus) DeepCopyInto(out *MySqlUserStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MySqlUserStatus.
func (in *MySqlUserStatus) DeepCopy() *MySqlUserStatus {
	if in == nil {
		return nil
	}
	out := new(MySqlUserStatus)
	in.DeepCopyInto(out)
	return out
}
